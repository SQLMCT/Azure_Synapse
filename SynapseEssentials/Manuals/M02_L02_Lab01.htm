<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:DengXian;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Segoe UI";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
@font-face
	{font-family:"\@DengXian";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria",serif;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:24.0pt;
	margin-right:.1in;
	margin-bottom:12.0pt;
	margin-left:0in;
	page-break-before:always;
	page-break-after:avoid;
	font-size:20.0pt;
	font-family:"Segoe UI",sans-serif;
	color:#4F81BD;
	font-weight:normal;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:12.0pt;
	margin-left:0in;
	line-height:115%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Segoe UI",sans-serif;
	color:black;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:11.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria",serif;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:5.0pt;
	margin-left:22.0pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria",serif;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-name:"List Paragraph\,Bullet List\,FooterText\,Procedure StepCxSpLast";
	mso-style-link:"List Paragraph Char\,Bullet List Char\,FooterText Char\,Procedure StepCxSpLast Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria",serif;}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	font-size:14.0pt;
	font-family:"Segoe UI",sans-serif;
	color:#365F91;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Segoe UI",sans-serif;
	color:#4F81BD;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Segoe UI",sans-serif;
	color:black;
	font-weight:bold;}
span.ListParagraphChar
	{mso-style-name:"List Paragraph Char\,Bullet List Char\,FooterText Char\,Procedure StepCxSpLast Char";
	mso-style-link:"List Paragraph\,Bullet List\,FooterText\,Procedure StepCxSpLast";
	font-family:"Cambria",serif;}
span.TaskHeadingChar
	{mso-style-name:"Task Heading Char";
	mso-style-link:"Task Heading";
	font-family:"Segoe UI",sans-serif;
	font-weight:bold;}
p.TaskHeading, li.TaskHeading, div.TaskHeading
	{mso-style-name:"Task Heading";
	mso-style-link:"Task Heading Char";
	margin-top:0in;
	margin-right:.1in;
	margin-bottom:3.0pt;
	margin-left:0in;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Segoe UI",sans-serif;
	font-weight:bold;}
span.TaskNameChar
	{mso-style-name:"Task Name Char";
	mso-style-link:"Task Name";
	font-family:"Cambria",serif;
	color:black;
	font-weight:bold;}
p.TaskName, li.TaskName, div.TaskName
	{mso-style-name:"Task Name";
	mso-style-link:"Task Name Char";
	margin-top:0in;
	margin-right:.1in;
	margin-bottom:6.0pt;
	margin-left:.75in;
	text-indent:-.25in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria",serif;
	color:black;
	font-weight:bold;}
span.TaskDetailChar
	{mso-style-name:"Task Detail Char";
	mso-style-link:"Task Detail";
	font-family:"Cambria",serif;
	color:black;
	font-weight:normal;}
p.TaskDetail, li.TaskDetail, div.TaskDetail
	{mso-style-name:"Task Detail";
	mso-style-link:"Task Detail Char";
	margin-top:0in;
	margin-right:.1in;
	margin-bottom:6.0pt;
	margin-left:67.5pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria",serif;
	color:black;}
span.ExerciseScenerioChar
	{mso-style-name:"Exercise Scenerio Char";
	mso-style-link:"Exercise Scenerio";
	font-family:"Cambria",serif;}
p.ExerciseScenerio, li.ExerciseScenerio, div.ExerciseScenerio
	{mso-style-name:"Exercise Scenerio";
	mso-style-link:"Exercise Scenerio Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Cambria",serif;}
.MsoChpDefault
	{font-size:10.0pt;
	font-family:"Calibri",sans-serif;}
 /* Page Definitions */
 @page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	border:double windowtext 5.25pt;
	padding:24.0pt 24.0pt 24.0pt 24.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US link=blue vlink=purple style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal align=center style='text-align:center'><img width=624
height=226 id="Picture 12" src="M02_L02_Lab01_files/image001.png"></p>

<p class=MsoNormal align=center style='text-align:center'><a
name="_Hlk507322946"></a><b><span style='font-size:22.0pt;line-height:115%'>Loading
Data to Azure Synapse SQL</span></b></p>

<p class=MsoNormal><b>Introduction</b></p>

<p class=MsoNormal>In this lab, you will load to <span style='font-size:12.0pt;
line-height:115%'>Azure</span> Synapse SQL from a staged Azure Blob Storage
account. In an ideal real-world scenario, data from source systems are staged
to Azure Data Lake or Azure Blob Store prior loading to Synapse SQL. This lab
will show the various options of data loading scenarios and the differences
between them. </p>

<p class=MsoNormal><b>Estimated Time</b></p>

<p class=MsoNormal>80 minutes</p>

<p class=MsoNormal><b>Objectives</b></p>

<p class=MsoNormal>Upon completing this lab, you will be able to: </p>

<p class=MsoListParagraph style='margin-left:39.0pt;text-indent:-21.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Stage data to Azure Blob Storage</p>

<p class=MsoListParagraph style='margin-left:39.0pt;text-indent:-21.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Load data to Synapse SQL using Polybase</p>

<p class=MsoListParagraph style='margin-left:39.0pt;text-indent:-21.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Using COPY statement to load data to Synapse SQL</p>

<p class=MsoListParagraph style='margin-left:39.0pt;text-indent:-21.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Understand the various data loading patterns</p>

<span style='font-size:11.0pt;line-height:115%;font-family:"Cambria",serif'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><b>Prerequisites</b></p>

<p class=MsoListParagraph style='margin-left:39.0pt;text-indent:-21.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>An Azure Synapse SQL (created in the Create and Provision Lab)</p>

<p class=MsoListParagraph style='margin-left:39.0pt;text-indent:-21.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Supported operating System to perform this class: Windows
10/Windows Server 2016</p>

<p class=MsoListParagraph style='margin-left:39.0pt;text-indent:-21.0pt'><span
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>SQL Server Management Studio 17 or later</p>

<p class=MsoNormal><b>Logon Information</b></p>

<p class=MsoNormal>Use the following credentials to login into the Virtual Lab
on Demand Environment</p>

<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:
Symbol'>·</span><span style='font-size:7.0pt;line-height:115%;font-family:"Times New Roman",serif'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Username: Administrator</p>

<p class=MsoListParagraph style='text-indent:-.25in'><span style='font-family:
Symbol'>·</span><span style='font-size:7.0pt;line-height:115%;font-family:"Times New Roman",serif'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Password: Pa$$w0rd</p>

<p class=MsoListParagraph style='margin-left:.25in'><a name="_Hlk56762110"><span
style='font-size:10.0pt;line-height:115%'>&nbsp;</span></a></p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#D9E2F3'>

<p class=MsoNormal style='background:#D9E2F3;border:none;padding:0in'><b><span
style='color:black'>Note: </span></b><span style='color:black'>The labs can be
performed using your laptop environment rather than LOD environment.</span></p>

</div>

<span style='font-size:11.0pt;line-height:115%;font-family:"Cambria",serif'><br
clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoTocHeading>Table of Contents</p>

<p class=MsoToc2><a href="#_Toc47352983">Lab: Loading Data to Synapse SQL Pool<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></p>

<p class=MsoToc3><a href="#_Toc47352984">Exercise 1: Assign User with Higher
Resource Class and Scale Up Data Warehouse Unit<span style='color:windowtext;
display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></p>

<p class=MsoToc3><a href="#_Toc47352985">Exercise 2: Loading Data using COPY
Statement<span style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></p>

<p class=MsoToc3><a href="#_Toc47352986">Exercise 3: Prepare External Objects
for Polybase Load<span style='color:windowtext;display:none;text-decoration:
none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></p>

<p class=MsoToc3><a href="#_Toc47352987">Exercise 4: Load Data to Managed
Tables using Polybase<span style='color:windowtext;display:none;text-decoration:
none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></p>

<p class=MsoToc3><a href="#_Toc47352988">Exercise 5: Understand impact of table
distribution during data loading<span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>12</span></a></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal> </p>

<p class=MsoNormal>&nbsp;</p>

<div style='border:none;border-bottom:solid #333399 1.0pt;padding:0in 0in 1.0pt 0in;
margin-right:.1in'>

<h2><a name="_Toc47352983"></a><a name="_Toc510003826">Lab: </a>Loading Data to
Synapse SQL Pool</h2>

</div>

<p class=MsoNormal>In this lab, you will work through various data loading
approaches to understand the differences between them. This lab will go deep on
the internals of loading data with Polybase and the factors that leads to data
loading performance.</p>

<h3><a name="_Toc47352984">Exercise 1: Assign User with Higher Resource Class
and Scale Up Data Warehouse Unit</a></h3>

<p class=ExerciseScenerio>This section guides you on how to assign a SQL user
with higher resource class. It is a best practice to always follow when loading
data to Synapse SQL to create a separate SQL user for data loading. The user
should be assigned with higher resource class to take advantage of large memory
allocation during the data loading that helps in faster data loading. </p>

<p class=TaskHeading>Tasks</p>

<p class=TaskName style='margin-left:0in;text-indent:0in'>Assign higher
resource class for SQL user</p>

<p class=TaskDetail style='margin-left:38.4pt;text-indent:-20.4pt'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>In <b>SQL Server Management Studio</b>, right click on the Synapse SQL
instance and click <b>New Query</b>.</p>

<p class=TaskDetail style='margin-left:38.4pt;text-indent:-20.4pt'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Type in the following statement that assigns <b>LargeRC</b> resource
class and a CONTROL permission for the SQL user that were created in previous
lab exercise. <b>Replace</b> <i>sqlpooldatabase </i>below with the actual name
of your Synapse SQL instance.</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#BDD6EE;margin-left:38.4pt;margin-right:.1in'>

<p class=TaskDetail style='margin-top:0in;margin-right:0in;margin-bottom:6.0pt;
margin-left:0in;background:#BDD6EE;border:none;padding:0in'><b>Note</b>: Make
sure that you are in your Synapse Dedicated Pool when issuing the below command</p>

</div>

<p class=TaskDetail style='margin-left:38.4pt'><img width=474 height=74
src="M02_L02_Lab01_files/image002.png"
alt="EXEC sp_addrolemember 'largerc', 'DWLoader';&#13;&#10;GRANT CONTROL ON DATABASE::[sqlpooldatabase] to DWLoader;&#13;&#10;"></p>

<p class=TaskName style='margin-left:38.4pt;text-indent:-20.4pt'><span
style='font-weight:normal'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-weight:normal'>Before loading data to Synapse
SQL Pool, it is a best practice to always start with large Data Warehouse Units
(DWU) for optimal parallelism. Connect to the </span>master<span
style='font-weight:normal'> database in your Synapse SQL using </span>SQLAdmin<span
style='font-weight:normal'> login and open a </span>New Query<span
style='font-weight:normal'>. Execute the following statement over the </span>master<span
style='font-weight:normal'> database. The statement will scale out the Synapse
SQL Pool to DWU1000.</span></p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#BDD6EE;margin-left:.5in;margin-right:.1in'>

<p class=TaskName style='margin-top:0in;margin-right:0in;margin-bottom:6.0pt;
margin-left:0in;text-indent:0in;background:#BDD6EE;border:none;padding:0in'>Note:<span
style='font-weight:normal'>  In the alter database statement, change the name
of the Synapse SQL as per your instance name.</span></p>

</div>

<p class=TaskName style='margin-left:.5in;text-indent:0in'><span
style='font-weight:normal'><img width=313 height=71
src="M02_L02_Lab01_files/image003.png"
alt="ALTER DATABASE sqlpooldatabase&#13;&#10;MODIFY (SERVICE_OBJECTIVE = 'DW1000c')&#13;&#10;;&#13;&#10;"></span></p>

<p class=TaskName style='margin-left:38.4pt;text-indent:-20.4pt'><span
style='font-weight:normal'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-weight:normal'>Run the following statement to
monitor the scale out progress. It could typically take 3-5 minutes. Replace
with the value for </span>major_resource_id<span style='font-weight:normal'>
with the Synapse SQL instance name.</span></p>

<p class=TaskName style='margin-left:.5in;text-indent:0in'><span
style='font-weight:normal'><img width=483 height=299
src="M02_L02_Lab01_files/image004.png"
alt="WHILE &#13;&#10;(&#13;&#10;    SELECT TOP 1 state_desc&#13;&#10;    FROM sys.dm_operation_status&#13;&#10;    WHERE &#13;&#10;        1=1&#13;&#10;        AND resource_type_desc = 'Database'&#13;&#10;        AND major_resource_id = '&lt;replace with SQL DW name&gt;'&#13;&#10;        AND operation = 'ALTER DATABASE'&#13;&#10;    ORDER BY&#13;&#10;        start_time DESC&#13;&#10;) = 'IN_PROGRESS'&#13;&#10;BEGIN&#13;&#10;    RAISERROR('Scale operation in progress',0,0) WITH NOWAIT;&#13;&#10;    WAITFOR DELAY '00:00:05';&#13;&#10;END&#13;&#10;PRINT 'Complete';&#13;&#10;"></span></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>Exercise 1 has been completed.</span></i></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>&nbsp;</p>

<h3><a name="_Toc47352985">Exercise 2: Loading Data using COPY Statement</a></h3>

<p class=ExerciseScenerio>This section guides you on how to use the newly
introduced COPY statement to load datasets from an external storage to Azure
Synapse SQL Pool. Unlike Polybase loads, the external file format, data
external source and external table referencing to the datasets in external
storage such as Azure Data Lake/Azure Blob Storage needs to be defined. With
COPY statement, there is no need to create them in advance, while providing
customizations on the file format such as ability to specify row terminators
for CSV files, use SQL Server date formats for CSV files, and specifying
separate storage accounts for records throwing errors while loading data to
Synapse SQL Pool.</p>

<p class=TaskHeading>Tasks</p>

<p class=TaskName style='margin-left:0in;text-indent:0in'>Configure COPY
statement to reference Azure Data Lake and load Parquet files</p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Open
<b>SQL Server Management Studio </b>and open the <b>CreateTableCopy.sql</b>
file from <b>LabFiles\Module2</b> directory. Connect the query to your Synapse
SQL Pool using <b>DWLoader</b> user. Below is the query:</p>

<p class=TaskDetail style='margin-left:.5in'><b><img width=578 height=429
src="M02_L02_Lab01_files/image005.png"
alt="CREATE SCHEMA [NYCTaxi];&#13;&#10;&#13;&#10;&#13;&#10;IF NOT EXISTS (SELECT * FROM sys.objects WHERE NAME = 'TripsStg' AND TYPE = 'U')&#13;&#10;CREATE TABLE [NYCTaxi].[TripsStg]&#13;&#10;	(&#13;&#10;	 VendorID nvarchar(30),&#13;&#10;	 tpep_pickup_datetime nvarchar(30),&#13;&#10;	 tpep_dropoff_datetime nvarchar(30),&#13;&#10;	 passenger_count nvarchar(30),&#13;&#10;	 trip_distance nvarchar(30),&#13;&#10;	 RatecodeID nvarchar(30),&#13;&#10;	 store_and_fwd_flag nvarchar(30),&#13;&#10;	 PULocationID nvarchar(30),&#13;&#10;	 DOLocationID nvarchar(30),&#13;&#10;	 payment_type nvarchar(30),&#13;&#10;	 fare_amount nvarchar(10),&#13;&#10;	 extra nvarchar(10),&#13;&#10;	 mta_tax nvarchar(10),&#13;&#10;	 tip_amount nvarchar(10),&#13;&#10;	 tolls_amount nvarchar(10),&#13;&#10;	 improvement_surcharge nvarchar(10),&#13;&#10;	 total_amount nvarchar(10)&#13;&#10;	)&#13;&#10;WITH&#13;&#10;	(&#13;&#10;	DISTRIBUTION = ROUND_ROBIN,&#13;&#10;	 HEAP&#13;&#10;	)&#13;&#10;GO&#13;&#10;"></b></p>

<p class=TaskDetail style='margin-left:.5in'>The above query first creates a heap
table in SQL Pool for staging load. Once the table is created, data can be
loaded to the table. In a production table, a COPY INTO is feasible to
incrementally load the data. Exceptionally, stored procedure can be created
with the logics to incrementally load delta data if required.</p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Open
<b>COPYStatement.sql</b> file from <b>LabFiles\Module2</b> directory and <b>connect
the query</b> using <b>DWLoader</b> user login (password is Str0ng_password). Replace
the statement <i>&lt;storageaccountname&gt;</i> with the Data Lake Storage
Account name that was created in Module 1s lab and &lt;SASSecret&gt; with the
Shared Access Signature key for the Data Lake Storage Account. Below is the
query:</p>

<p class=TaskDetail style='margin-left:.5in'><b><img width=627 height=218
src="M02_L02_Lab01_files/image006.png"
alt="COPY INTO [NYCTaxi].[TripsStg]&#13;&#10;FROM 'https://&lt;storageaccountname&gt;.blob.core.windows.net/nyctaxistaging/fact/*.parquet'&#13;&#10;WITH&#13;&#10;(&#13;&#10;	CREDENTIAL=(IDENTITY= 'Shared Access Signature', SECRET='&lt;SASSecret&gt;'),&#13;&#10;	FILE_TYPE = 'PARQUET'&#13;&#10;	,MAXERRORS = 0&#13;&#10;	,IDENTITY_INSERT = 'OFF'&#13;&#10;)&#13;&#10;GO&#13;&#10;"></b></p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>The
FROM clause above defines the URL where the files are located. In this example,
all the files with the <i>.parquet</i> extension are being loaded to Synapse
SQL Pool table. Wildcards can be specified for multiple files. The other file
with the .csv extension will be loaded using Polybase approach.</p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Once
configured the location, run the statement. The data from the external file in
Azure Data Lake gets loaded to the NYCTaxi.TripsStg table. </p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#D9E2F3;margin-left:.5in;margin-right:.1in'>

<p class=TaskDetail style='margin-top:0in;margin-right:0in;margin-bottom:6.0pt;
margin-left:0in;background:#D9E2F3;border:none;padding:0in'><b>Notice</b>:  that
the feasibility of the data loading with COPY statement. There are no
pre-requisite as to create the external table and file formats as we will see
in the next exercise using Polybase.</p>

</div>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Next,
lets create another copy of the table loaded with Hash distributed (more on
table distribution types in Module 3) and a simple transformation to change
column names and its data type. Open the <b>CTAS.sql</b> file from <b>LabFiles\Module2
</b>directory and connect the query to your Synapse SQL Pool instance using <b>DWLoader</b>
user. Query as below:</p>

<p class=TaskDetail style='margin-left:.5in'><b><img width=515 height=379
src="M02_L02_Lab01_files/image007.png"
alt="CREATE TABLE [NYCTaxi].[Trips]&#13;&#10;WITH  &#13;&#10;(DISTRIBUTION = HASH([PULocationID]),&#13;&#10;CLUSTERED COLUMNSTORE INDEX)&#13;&#10;AS SELECT&#13;&#10;cast([VendorID] as varchar(10)) as [VendorID],&#13;&#10;    cast([tpep_pickup_datetime] as date) as [tpep_pickup_date],&#13;&#10;    cast([tpep_dropoff_datetime] as date) as [tpep_dropoff_date],&#13;&#10;    cast([passenger_count] as int) as [passenger_count],&#13;&#10;    cast([trip_distance] as float) as [trip_distance],&#13;&#10;    cast([RateCodeID] as int) as [RateCodeID],&#13;&#10;    cast([store_and_fwd_flag] as varchar(3)) as [store_and_fwd_flag],&#13;&#10;    cast([PULocationID] as int ) as [PULocationID],&#13;&#10;    cast([DOLocationID] as int ) as [DOLocationID],&#13;&#10;    cast([payment_type] as int ) as [payment_type], &#13;&#10;    cast([fare_amount] as money ) as [fare_amount],&#13;&#10;    cast([extra] as money ) as [extra],&#13;&#10;    cast([mta_tax] as money ) as [mta_tax],&#13;&#10;    cast([tip_amount] as money ) as [tip_amount],&#13;&#10;    cast([tolls_amount] as money ) as [tolls_amount],&#13;&#10;    cast([improvement_surcharge] as money ) as [improvement_surcharge],&#13;&#10;    cast([total_amount] as money) as [total_amount]&#13;&#10;FROM [NYCTaxi].[TripsStg]&#13;&#10;"></b></p>

<p class=TaskDetail style='margin-left:.5in'>Notice the code has column name
change for <b>tpep_pickup_datetime</b> and <b>tpep_dropoff_datetime</b> and its
data type being changed to date. The Create Table As Select (CTAS) statement is
recommended to easily create a copy of table and it is a minimally logged
operation. </p>

<p class=TaskDetail style='margin-left:.5in'>You can run a row count on the
newly created [NYCTaxi].[Trips] table to take note of the rows. </p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>Exercise 2 has been completed.</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<h3><a name="_Toc47352986">Exercise 3: Prepare External Objects for Polybase
Load</a></h3>

<p class=ExerciseScenerio>This section guides you on how to load data to Synapse
SQL Pool using Polybase. Polybase is a technology that allows the ability to
connect to external data sources such as Azure Data Lake or Azure Blob Storage
where non-relational files can be staged. The Polybase syntax is based on TSQL
where a new language is not required to learn to take advantage of the Polybase
technology. </p>

<p class=TaskHeading>Tasks</p>

<p class=TaskName style='margin-left:0in;text-indent:0in'>Create reference to
Azure Data Lake Storage Account</p>

<p class=TaskDetail style='margin-left:38.4pt;text-indent:-20.4pt'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Open the <b>PolybaseExternalObjects.sql</b> file from <b>LabFiles\Module2\
</b>directory and connect the query to the SQL Server using <b>SQLAdmin</b> where
the Synapse SQL Pool instance is deployed to. </p>

<p class=TaskDetail style='margin-left:38.4pt'>The <b>PolybaseExternalObjects.sql</b>
file is embedded in this doc below.</p>

<p class=TaskDetail style='margin-left:38.4pt;text-indent:-20.4pt'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>In the <b>PolybaseExternalObjects.sql</b> file, <b>replace</b> the <b>Secret
key</b> in the <b>CREATE DATABASE SCOPED CREDENTIAL</b> as noted from your Data
Lake Storage Account created in Module 1 lab.</p>

<p class=TaskDetail style='margin-left:38.4pt;text-indent:-20.4pt'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Similarly, in the statement for <b>CREATE EXTERNAL DATS SOURCE</b> replace
the statement <b><i>&lt;Replace with Data Lake Storage Account name&gt; </i></b>with
the Data Lake Storage Account name as created in Module 1 lab. </p>

<p class=TaskDetail style='margin-left:38.4pt;text-indent:-20.4pt'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>In the <b>PolybaseExternalObjects.sql</b> file, each block has comments.
Review the comments and take a moment to understand the code. Run the statements
sequentially.</p>

<p class=TaskDetail style='margin-left:0in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:0in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>Exercise 3 has been completed.</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<p class=TaskDetail style='margin-left:38.4pt'><i><span style='font-size:12.0pt;
line-height:115%'>&nbsp;</span></i></p>

<h3><a name="_Toc47352987">Exercise 4: Load Data to Managed Tables using
Polybase</a></h3>

<p class=ExerciseScenerio>This section guides you on how to load data to Synapse
SQL Pool with the external objects created in previous exercise. </p>

<p class=TaskHeading>Tasks</p>

<p class=TaskName style='margin-left:0in;text-indent:0in'>Load data to Synapse
SQL Pool using Polybase</p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>In
<b>SQL Server Management Studio</b>, open <b>PolybaseLoading.sql</b> file from <b>LabFiles\Module
2\ </b>directory and <b>connect the query</b> to the SQL Server using <b>DWLoader</b>
user login (password is Str0ng_password) where the Synapse SQL instance is
deployed to. </p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Run
the query sequentially block by block. This will create tables in Synapse SQL
Pool.</p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Once
all the dimension tables are populated as in Step (2) above, open <b>PolybaseIncrementalLoad.sql</b>
file from<b> LabFiles</b>\Module2\ directory <b>connect the query</b> to the
SQL Server using <b>DWLoader</b> user login (password is Str0ng_password) where
the Synapse SQL instance is deployed to. </p>

<p class=TaskDetail style='margin-left:.5in'>This query will incrementally load
the Trips table reading the only .csv file named yellow_tripdata_2018-12.csv which
is in Data Lake. </p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:.5in'>Run the query. Query as below:</p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:.5in'><b><img width=515 height=344
src="M02_L02_Lab01_files/image008.png"
alt="-- Incrementally load the fact table Trips with Polybase&#13;&#10;INSERT INTO [NYCTaxi].[Trips]&#13;&#10;SELECT cast([VendorID] as varchar(10)) as [VendorID],&#13;&#10;    cast([tpep_pickup_datetime] as date) as [tpep_pickup_date],&#13;&#10;    cast([tpep_dropoff_datetime] as date) as [tpep_dropoff_date],&#13;&#10;    cast([passenger_count] as int) as [passenger_count],&#13;&#10;    cast([trip_distance] as float) as [trip_distance],&#13;&#10;    cast([RateCodeID] as int) as [RateCodeID],&#13;&#10;    cast([store_and_fwd_flag] as varchar(3)) as [store_and_fwd_flag],&#13;&#10;    cast([PULocationID] as int ) as [PULocationID],&#13;&#10;    cast([DOLocationID] as int ) as [DOLocationID],&#13;&#10;    cast([payment_type] as int ) as [payment_type], &#13;&#10;    cast([fare_amount] as money ) as [fare_amount],&#13;&#10;    cast([extra] as money ) as [extra],&#13;&#10;    cast([mta_tax] as money ) as [mta_tax],&#13;&#10;    cast([tip_amount] as money ) as [tip_amount],&#13;&#10;    cast([tolls_amount] as money ) as [tolls_amount],&#13;&#10;    cast([improvement_surcharge] as money ) as [improvement_surcharge],&#13;&#10;    cast([total_amount] as money) as [total_amount]&#13;&#10; FROM [NYTaxiSTG].[Trips]&#13;&#10; OPTION (LABEL='Trips:PolybaseIncrementalLoad')&#13;&#10;&#13;&#10;"></b></p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Once
the query finished running, open, <b>PolybaseMonitoring.sql</b> file from <b>LabFiles\Module2\
</b>directory and connect the query as <b>SQLAdmin</b> user and run the query. </p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:.5in'>Query as below: </p>

<p class=TaskDetail style='margin-left:.5in'><b><img width=363 height=151
src="M02_L02_Lab01_files/image009.png"
alt="SELECT DISTINCT ew.* &#13;&#10;FROM[sys].[dm_pdw_dms_external_work] ew &#13;&#10;JOIN sys.dm_pdw_exec_requests r &#13;&#10;ON r.request_id = ew.request_id&#13;&#10;JOIN Sys.dm_pdw_request_steps s&#13;&#10;ON r.request_id = s.request_id&#13;&#10;WHERE r.[label] = 'Trips:PolybaseIncrementalLoad'&#13;&#10;ORDER BY  input_name, dms_step_index&#13;&#10;"></b></p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>It
is very interesting to see how the files are being loaded effectively in
parallel. For large files &gt;512MB, the files were split into multiple chunks
so it can be read efficiently. Highlighted below the .csv file being split as
it is over 700MB in size. </p>

<p class=TaskDetail style='margin-left:.5in'><img width=545 height=51
id="Picture 10" src="M02_L02_Lab01_files/image010.jpg"></p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Now,
run a row count on the [NYCTaxi].[Trips] table and notice the number of rows
has increased prior incrementally loading the data to the Trips table.</p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:0in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>Exercise 4 has been completed.</span></i></p>

<p class=MsoNormal><i><span style='font-size:12.0pt;line-height:115%'>&nbsp;</span></i></p>

<span style='font-size:11.0pt;font-family:"Cambria",serif'><br clear=all
style='page-break-before:always'>
</span>

<p class=MsoNormal style='margin-bottom:0in;line-height:normal'><b><span
style='font-size:16.0pt;font-family:"Segoe UI",sans-serif;color:black'>&nbsp;</span></b></p>

<h3><a name="_Toc47352988">Exercise 5: Understand impact of table distribution
during data loading</a></h3>

<p class=ExerciseScenerio>This section shows the most common problem when
loading data to a distributed table - data skewness. This occurs when the
cardinality of the distribution column is low or skewed to a certain set of
values. The canonical case is a key that has a lot of NULL or 0 values. In the
previous exercises, the data was loaded to Heap tables with round robin
distribution. In this exercise, the data will be loaded to a hash distributed
table and compare the data loading performance against the previous table
distribution type which uses round robin distribution.</p>

<p class=TaskHeading>Tasks</p>

<p class=TaskName style='margin-left:0in;text-indent:0in'>Load data to hash
distributed table.</p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>In
<b>SQL Server Management Studio</b>, open the <b>PolybaseHashLoad.sql</b> file
from <b>LabFiles\Module 2\</b> directory. Connect to the SQL Server using <b>DWLoader</b>
login. Execute the query and observer the time it takes to complete the query. </p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Open
a <b>New Query</b> window and type in the following statement:</p>

<p class=TaskDetail style='margin-left:.5in'><img width=299 height=97
src="M02_L02_Lab01_files/image011.png"
alt="Select * &#13;&#10;FROM sys.dm_pdw_dms_workers dw&#13;&#10;JOIN sys.dm_pdw_exec_requests r &#13;&#10;ON r.request_id = dw.request_id&#13;&#10;WHERE r.[label] = 'CTAS:HashPaymentType'&#13;&#10;"></p>

<p class=TaskDetail style='margin-left:.5in'>This shows how the data is being
read from files, how that data is being converted to SQL data type format and
how it is being written to Synapse SQL Pool distributions. The steps are the
following: </p>

<p class=TaskDetail style='margin-left:.5in'><b>EXTERNAL_READER</b> = Each line
is an individual thread reading data from files</p>

<p class=TaskDetail style='margin-left:.5in'><b>HASH_CONVERTER</b> = Thread
responsible for converting the data generated by the EXTERNAL_READER</p>

<p class=TaskDetail style='margin-left:.5in'><b>WRITER</b> = Thread responsible
for writing to the correct distribution based on sink table definition. </p>

<p class=TaskDetail style='margin-left:.5in'>Notice how many writers has 0 in <b>bytes_processed</b>
column. This is because of the table skew. Table skew occurs when certain
distributions receive more data than others. Distributions receive data based
on the hash value of the distribution. You will notice that there are only 4 writers
that processes the incoming rows to distribute accordingly to the
distributions. Since the column <b>payment_type</b> in the newly created table
NYCTaxi.TripsHash has only 4 unique values and therefore only 4 writers that
processes the data distributions. </p>

<p class=TaskDetail style='margin-left:.5in'>The following query shows that
only 4 writers processes the data distribution. The query also found in <b>PolybaseHashLoadMonitoring.sql</b>
in <b>LabFiles\Module2</b> directory.</p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:.5in'><img width=327 height=119
src="M02_L02_Lab01_files/image012.png"
alt="Select * &#13;&#10;FROM sys.dm_pdw_dms_workers dw&#13;&#10;JOIN sys.dm_pdw_exec_requests r &#13;&#10;ON r.request_id = dw.request_id&#13;&#10;WHERE r.[label] = 'CTAS:HashPaymentType'&#13;&#10;and type = 'WRITER' and bytes_processed &lt;&gt; 0&#13;&#10;"></p>

<p class=TaskDetail style='margin-left:.5in'>&nbsp;</p>

<p class=TaskDetail style='margin-left:.5in'><img width=537 height=187
id="Picture 4" src="M02_L02_Lab01_files/image013.jpg"></p>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Also
notice the data loading performance is very poor against the previous loads of
round robin tables. In the previous lab, there were more than 90M rows loaded
in under 2 minutes. In this exercise, it takes over 1.5 minutes to load only a
single file which has 8M rows. </p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#D9E2F3;margin-left:.5in;margin-right:.1in'>

<p class=TaskDetail style='margin-top:0in;margin-right:0in;margin-bottom:6.0pt;
margin-left:0in;background:#D9E2F3;border:none;padding:0in'><b>Note:</b> Be mindful
when choosing hash distribution. It is recommended to choose hash distribution on
a column that distributes evenly across 60 distributions. Generally, for
initial data loading it is recommended to load over a round robin table and then
transform to a new table using CTAS statement to a hash distributed table. For
hash distribution, it is required to have at least 60 unique values in the hash
column and has very fewer NULLs. Read more about hash distribution table design
guidelines <a
href="https://docs.microsoft.com/en-us/azure/sql-data-warehouse/sql-data-warehouse-tables-distribute">here</a>.</p>

</div>

<p class=TaskDetail style='margin-left:.5in;text-indent:-.25in'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>In
<b>SQL Server Management Studio</b>, open a new query, connect to the <b>master
</b>database and run the following command to scale down the DWU for the
Synapse SQL Pool to DWU100c.</p>

<p class=TaskDetail style='margin-left:38.4pt'><img border=0 width=313
height=49 src="M02_L02_Lab01_files/image014.png"
alt="ALTER DATABASE sqldw&#13;&#10;MODIFY (SERVICE_OBJECTIVE = 'DW100c');&#13;&#10;&#13;&#10;"></p>

<p class=TaskDetail style='margin-left:38.4pt'>&nbsp;</p>

<p class=TaskDetail style='margin-left:0in'><i><span style='font-size:12.0pt;
line-height:115%'>Exercise 5 has been completed.</span></i></p>

<p class=TaskDetail style='margin-left:0in'>&nbsp;</p>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;
background:#D9E2F3;margin-left:0in;margin-right:.1in'>

<p class=TaskDetail style='margin-top:0in;margin-right:0in;margin-bottom:6.0pt;
margin-left:0in;background:#D9E2F3;border:none;padding:0in'><b>Important:</b>
Please pause your Synapse SQL Pool upon completing this lab. Do resume the SQL
Pool instance when you start working with the next exercises. This is to
prevent from reaching the credit limit throughout the workshop.</p>

</div>

</div>

</body>

</html>
